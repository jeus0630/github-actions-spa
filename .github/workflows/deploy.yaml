name: Deploy SPA to S3

on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    types:
    - opened
    - synchronize
    - closed
    branches:
    - dev
    - main

jobs:
  test:
      if: github.event.action == 'opened' || github.event.action == 'synchronize'
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache modules
        uses: actions/cache@v3
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install Dependencies
        run: |
          yarn --prefer-offline
      - name: Test App
        run: |
          yarn test
      - name: Build
        run: |
          yarn build

  set-environment:
      if: github.event.pull_request.merged == true || github.ref_type == 'tag'
      runs-on: ubuntu-latest
      outputs:
        environment: ${{ steps.set-env.outputs.environment }}
      steps:
      - name: Set env
        id: set-env
        run: |
          if [[ ${{ github.ref_type }} == "tag" ]]; then
            echo "environment=qa" >> $GITHUB_OUTPUT 
            exit 0
          fi

          if [[ ${{ github.base_ref }} == "main" ]]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "environment=dev" >> $GITHUB_OUTPUT
      - name: Check env
        run: |
          echo ${{ steps.set-env.outputs.environment }}

  deploy-s3:
    runs-on: ubuntu-latest
    needs:
      - set-environment
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        environment:
          - ${{ needs.set-environment.outputs.environment }}
    environment: ${{ matrix.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache modules
        uses: actions/cache@v3
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install Dependencies
        run: |
          yarn --prefer-offline
      - name: Test App
        run: |
          yarn test
      - name: Build
        run: |
          yarn build
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      - name: Deploy S3
        run: |
          aws s3 sync ./build s3://${{ vars.S3_BUCKET }}
      - name: CloudFront Invalidation
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUD_FRONT_ID }} --paths "/*"

  create-pr:
    if: needs.set-environment.outputs.environment == 'qa'
    runs-on: ubuntu-latest
    needs:
    - set-environment
    - deploy-s3
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Github Auth Login
      run: |
        echo ${{ secrets.PERSONAL_ACCESS_TOKEN }} | gh auth login --with-token
    - name: Create Branch
      run: |
        git switch -c release/${{ github.ref_name }}
        git push origin release/${{ github.ref_name }}
    - name: Create PR
      run: |
        gh pr create --base main --head release/${{ github.ref_name }} --title "release/${{ github.ref_name }} -> main" --body "Release PR ${{ github.ref_name }}"
  
  approve:
    if: needs.set-environment.outputs.environment == 'staging'
    runs-on: ubuntu-latest
    environment: approve
    needs:
    - set-environment
    - deploy-s3
    steps:
    - name: approve
      run: |
        echo "Approve Done"
  
  production-deploy-s3:
    runs-on: ubuntu-latest
    needs:
    - approve
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        environment:
          - production
    environment: ${{ matrix.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache modules
        uses: actions/cache@v3
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install Dependencies
        run: |
          yarn
      - name: Test App
        run: |
          yarn test
      - name: Build
        run: |
          yarn build
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      - name: Deploy S3
        run: |
          aws s3 sync ./build s3://${{ vars.S3_BUCKET }}
      - name: CloudFront Invalidation
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUD_FRONT_ID }} --paths "/*"
  